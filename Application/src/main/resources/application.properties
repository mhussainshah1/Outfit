############# Cloudinary ################
cloud.name=mhussainshah1
cloud.secret=TumEYd__zLe37QbN-J_UBRqQ3Rk
cloud.key=195135636893328
# add the following to your pom.xml
#        <dependency>
#            <groupId>com.cloudinary</groupId>
#            <artifactId>cloudinary-taglib</artifactId>
#            <version>1.2.1</version>
#        </dependency>
#        <dependency>
#            <groupId>com.cloudinary</groupId>
#            <artifactId>cloudinary-http44</artifactId>
#            <version>1.2.1</version>
#        </dependency>
run.dataloader=true
#true
###############  H2 #######################
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2
#spring.jpa.hibernate.ddl-auto=create
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.jpa.show-sql=true
# add the following to your pom.xml
#
#         <dependency>
#            <groupId>com.h2database</groupId>
#            <artifactId>h2</artifactId>
#            <scope>runtime</scope>
#        </dependency>
################ My SQL ###################
spring.jpa.hibernate.ddl-auto=create
#none
#create
#update
spring.datasource.url=jdbc:mysql://localhost:3306/Outfit
spring.datasource.username=root
spring.datasource.password=password
useSSL=false
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#
# Note: Once we create database change "create" to "none"
# add the following to your pom.xml
#
#        <dependency>
#            <groupId>mysql</groupId>
#            <artifactId>mysql-connector-java</artifactId>
#            <scope>runtime</scope>
#        </dependency>
#
################ Postgres SQL.###################
#spring.datasource.url=${JDBC_DATABASE_URL}
#spring.datasource.username=${JDBC_DATABASE_USERNAME}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD}
#spring.jpa.show-sql=true
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=none
#  create
#  update
#spring.datasource.platform=postgres
#spring.datasource.url=jdbc:postgresql://localhost:5432/outfit
#spring.datasource.username=root
#spring.datasource.password=password
# add the following to your pom.xml
#
#       <dependency>
#            <groupId>org.postgresql</groupId>
#            <artifactId>postgresql</artifactId>
#            <scope>runtime</scope>
#        </dependency>
################ Open Weather API ###################
weather.url=api.openweathermap.org/data/2.5/weather
weather.apikey=75b5469d29c87461d0a6e2771208d3b5
# add the following to your pom.xml
#
#        <dependency>
#            <groupId>org.springframework.boot</groupId>
#            <artifactId>spring-boot-starter-json</artifactId>
#        </dependency>
#
#####To avoid double validation#######
spring.jpa.properties.jakarta.persistence.validation.mode=none
################## OUTH 2.0 ######################
#GitHub authentication keys
spring.security.oauth2.client.registration.github.clientId=c0145363137a94895d2b
spring.security.oauth2.client.registration.github.clientSecret=0ee455317ce865cb5b60a1994bc0581b8acf1956
spring.security.oauth2.client.registration.github.scope=user:email,read:user
#google authentication keys
spring.security.oauth2.client.registration.google.client-id=309462014228-745d93ee8djma7hhloa6cq2dnsin5aa7.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
#facebook authentication keys
spring.security.oauth2.client.registration.facebook.clientId=230145516266888
spring.security.oauth2.client.registration.facebook.clientSecret=b3144ab4122389643644514987b0db05
spring.security.oauth2.client.registration.facebook.scope=email, public_profile


###################mail############################
mail.smtp.starttls.enable=true
mail.smtp.auth=true
mail.smtp.host=smtp.gmail.com
mail.smtp.port=587
#Email Account Credentials ( it will be supervisor's credentials )
app.email_address=mhussainshah79@gmail.com
app.password=yvyfarmruopnfefn